# Generated by Django 5.2.4 on 2025-07-28 04:54

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("users", "0004_merge_0003_socialuser_0003_user_gender"),
    ]

    operations = [
        migrations.CreateModel(
            name="Accord",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="Note",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=50)),
                (
                    "type",
                    models.CharField(choices=[("top", "Top"), ("middle", "Middle"), ("base", "Base")], max_length=10),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Perfume",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=100)),
                ("brand", models.CharField(max_length=50)),
                ("release_year", models.IntegerField()),
                (
                    "intensity",
                    models.CharField(
                        choices=[("light", "Light"), ("medium", "Medium"), ("strong", "Strong")], max_length=10
                    ),
                ),
                (
                    "base_notes",
                    models.ManyToManyField(
                        limit_choices_to={"type": "base"}, related_name="base_perfumes", to="users.note"
                    ),
                ),
                ("main_accords", models.ManyToManyField(related_name="perfumes", to="users.accord")),
                (
                    "middle_notes",
                    models.ManyToManyField(
                        limit_choices_to={"type": "middle"}, related_name="middle_perfumes", to="users.note"
                    ),
                ),
                (
                    "top_notes",
                    models.ManyToManyField(
                        limit_choices_to={"type": "top"}, related_name="top_perfumes", to="users.note"
                    ),
                ),
            ],
        ),
    ]
